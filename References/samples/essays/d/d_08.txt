Another huge dilemma that most file systems have today is there is no way to store snap shots of your data, so that if you do need to go back to a certain point in time, you can do so. The only option to have this functionality was to look to an outside software vendor that would take snapshots at a specified time. The problem with this is that you have to set it all up to backup on a set schedule, then restoring the data back to the disk is a huge manual task. With ZFS, it stores snapshots on the fly, so you can tell it when to take a snapshot of the whole system, part of the system, or anything else desired. Then with a couple commands issued, the data is restored. ZFS also has true check summing and data healing.  In the FS/Volume model, if check summing was done, it was done on a per-block basis and sometimes could result in a proper checksum, but bad data. In that case the user would be completely confident that his data was fine, but in reality it is not. ZFS check summing is done on the file system layer, so all applications are blind to it even happening. Also, ZFS can detect if a check sum has errors and take the necessary steps to fix it.
	With all of this build up, it is time to get to the hard cold facts. Will ZFS outperform ext3 and NTFS? Sure all of the ZFS features are nice, but if it runs slow, what's the point? Sun did extensive testing and posted white papers on their results. They used identical hardware, and as close to the same software as they could. In straight file system calls ZFS truly shined in the writing throughput compared to ext3 and NTFS. For files greater than 32KB, the throughput for ZFS was double the amount of ext3 and NTFS. For files lower than 32KB, ZFS was about the same as ext3 and NTFS, since when ZFS writes it also writes the metadata for the file as well. Where ZFS did not do particularly well was in the read calls to the file system. In most cases, ZFS either performed equally or under performed. This would also make sense because it has to read the metadata of the file, and that overhead on a large number of files must add up in the delay. 
It was not hard to find material for this topic, but overall I feel that the quality of the material is not all that it could be, because ZFS is so new. Most of what I found was just basic ZFS features or Sun hyping up its new file system. Although the specifications do sound impressive, I would have loved to find some outside sources writing about their experience with ZFS. Most of my performance data is from Sun who made ZFS, which is a bit suspicious, but while researching I could not find any other unbiased statistics about ZFS performance.
